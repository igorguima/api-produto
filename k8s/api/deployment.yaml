apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 10
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
      labels:
        app: api   
    spec: 
      containers:
        - name: api
          image: igorguimaa/api-bootcamp-k8s-produto:v2
          resources:
            requests:
              memory: "32Mi"
              cpu:  "50m"
            limits:
              memory: "64Mi"
              cpu:  "100m"
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 0
          #   periodSeconds: 1
          #   timeoutSeconds: 1
          #   successThreshold: 1
          #   failureThreshold: 1                     
          # readinessProbe:
          #   httpGet:
          #     path: /read
          #     port: 8080
          #   initialDelaySeconds: 0
          #   periodSeconds: 1
          #   timeoutSeconds: 1
          #   successThreshold: 1
          #   failureThreshold: 1                               
          ports:
            - containerPort: 8080
          env:
            - name: MONGODB_URI
              value: mongodb://igorguima:XGmcU5bHa@mongodb-service:27017/admin
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
      app: api
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30000
  type: LoadBalancer

--- 

# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: api-hpa
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: api 
#   minReplicas: 1
#   maxReplicas: 10
#   targetCPUUtilizationPercentage: 80
#   scaleDown:
#     policies:
#     - type: Pods
#       value: 4
#       periodSeconds: 60
#     - type: Percent
#       value: 10
#       periodSeconds: 60